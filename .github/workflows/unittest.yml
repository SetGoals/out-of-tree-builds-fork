name: unit tests

on: 
  push:
    branches:
      - '*'

permissions:
    checks: write
    
jobs:
  build:
    name: test
    runs-on: runner
    steps:
      - name: checkout
        uses: actions/checkout@v3.5.3
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install chart.js svg-crowbar

      - name: Install cmake
        run: |
          brew install cmake
          cmake --version
                   
      - name: build tests
        run: |
         cd projects
         cmake -B build -S .
         cmake --build build
         pwd
         cd build
         ctest -C checkin --output-junit unittest.xml
         ls -la
         
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/*.xml'
          summary: |
           Unit Tests Summary - Complete
           
      - name: Generate Unit Test Summary
        id: summary
        run: |
          const Chart = require('chart.js');
          const { createCanvas, registerFont } = require('canvas');

          // Register any fonts if needed
          // registerFont('path/to/font.woff', { family: 'Font Name' });

          // Calculate your test result numbers
          const passedTests = 10;
          const failedTests = 5;

          // Create a canvas
          const canvas = createCanvas(800, 600);
          const ctx = canvas.getContext('2d');

          // Use Chart.js to create a pie chart
          const chart = new Chart(ctx, {
            type: 'pie',
            data: {
              labels: ['Passed', 'Failed'],
              datasets: [{
                data: [passedTests, failedTests],
                backgroundColor: ['#36A2EB', '#FF6384'],
                hoverBackgroundColor: ['#36A2EB', '#FF6384']
              }]
            },
            options: {
              plugins: {
                legend: {
                  position: 'bottom',
                },
              },
            },
          });

          // Get the SVG representation of the chart
          const svg = chart.toBase64Image();

          // Save the SVG as a file
          require('fs').writeFileSync('chart.svg', svg, 'base64');

      - name: Attach Pie Chart
        uses: actions/upload-artifact@v2
        with:
          name: Pie Chart
          path: chart.svg
         

